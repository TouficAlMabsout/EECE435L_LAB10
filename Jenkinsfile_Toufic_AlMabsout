pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
        PYTHON = 'C:\\Users\\toufi\\AppData\\Local\\Programs\\Python\\Python310\\python.exe'
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    if (!fileExists("${env.WORKSPACE}\\${VIRTUAL_ENV}")) {
                        bat "${env.PYTHON} -m venv ${VIRTUAL_ENV}"
                    }
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install -r requirements.txt"
                    // Install additional tools for coverage and security scanning
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install coverage bandit"
                }
            }
        }
        stage('Lint') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m flake8 app.py"
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pytest"
                }
            }
        }
        stage('Coverage') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && coverage run -m pytest"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && coverage report"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && coverage html" // Generates HTML report
                }
            }
        }
        stage('Security Scan') {
            steps {
                script {
                    // Run bandit for security scanning
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && bandit -r app.py"
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    echo "Deploying application..."
                    // Deployment logic (can be a simple script for demonstration)
                    bat "xcopy /s /e app.py C:\\Deployment\\App\\"
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}
