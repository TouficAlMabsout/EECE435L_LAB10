pipeline {
    agent any
    environment {
        VIRTUAL_ENV = 'venv'
        PYTHON = 'C:\\Users\\toufi\\AppData\\Local\\Programs\\Python\\Python310\\python.exe'
        COV = 'C:\\Users\\toufi\\AppData\\Local\\Programs\\Python\\Python310\\Scripts\\coverage.exe'
        BANDIT = 'C:\\Users\\toufi\\AppData\\Local\\Programs\\Python\\Python310\\Scripts\\bandit.exe'
    }
    stages {
        stage('Setup') {
            steps {
                script {
                    if (!fileExists("${env.WORKSPACE}\\${VIRTUAL_ENV}")) {
                        bat "${env.PYTHON} -m venv ${VIRTUAL_ENV}"
                    }
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install -r requirements.txt"
                }
            }
        }
        
        stage('Lint') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m flake8 app.py"
                }
            }
        }
        
        stage('Test') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pytest"
                }
            }
        }

        stage('Code Coverage') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install coverage"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.COV} run -m pytest"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.COV}  report"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.COV}  html"
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'htmlcov/**', allowEmptyArchive: true
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.PYTHON} -m pip install bandit"
                    bat ".\\${VIRTUAL_ENV}\\Scripts\\activate && ${env.BANDIT} -r . -o bandit_report.txt"
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'bandit_report.txt', allowEmptyArchive: true
                }
            }
        }
        
       stage('Deploy') {
    steps {
        script {
            echo "Deploying application..."
            // Ensure directory exists
            bat "if not exist C:\\Deployment\\App mkdir C:\\Deployment\\App"
            // Deploy the file
            bat "xcopy /s /e app.py C:\\Deployment\\App\\"
        }
    }
}

    }
    post {
        always {
            cleanWs()
        }
    }
}